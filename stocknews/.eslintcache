[{"C:\\Users\\Justin Grant\\Desktop\\stockNews\\stocknews\\src\\index.js":"1","C:\\Users\\Justin Grant\\Desktop\\stockNews\\stocknews\\src\\App.js":"2"},{"size":155,"mtime":1607031430734,"results":"3","hashOfConfig":"4"},{"size":2590,"mtime":1609720367683,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sk4lrq",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\Justin Grant\\Desktop\\stockNews\\stocknews\\src\\index.js",[],"C:\\Users\\Justin Grant\\Desktop\\stockNews\\stocknews\\src\\App.js",["11"],"import React from 'react'\nimport style from \"./index.module.css\"\nimport IconButton from '@material-ui/core/IconButton';\nimport { FaSearch } from 'react-icons/fa';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      value:'',\n      news: []\n    }\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.fetchStockNews(this.state.value); \n  }\n\n  handleChange = (event) => {\n    this.setState({value: event.target.value})\n  }\n\n  // function used in mapping to create and transform the news articles into cards\n  newsCreator = (props) => {\n    return(\n      <a href = {props['url']} className = {style.newsArticle}>\n        <img src = {props['image']} width = '200' height = '100'></img>\n        <h3>{props['title']}</h3>\n        <p className = {style.news_Summary}>{props['summary']}</p>\n      </a>\n    )\n  }\n\n  // This function fetches  news about stock that is inputed\n  fetchStockNews = (props) => {\n    var tempNewsArray = []\n    const API_NEWS_KEY = 'dSgyySKSrTp44mgcX443KL8bxVv5vWMg'\n    let API_CALLS = 'https://api.polygon.io/v1/meta/symbols/'+ props+'/news?perpage=12&page=1&apiKey=' + API_NEWS_KEY\n    fetch(API_CALLS)\n    .then(response => response.json())\n    .then(\n      data => {\n      for(var index in data) {\n        let newsArticle = {\n          title: data[index]['title'], \n          summary: data[index]['summary'], \n          url: data[index]['url'], \n          image: data[index]['image']\n        }\n        tempNewsArray.push(newsArticle);\n      }\n      this.setState({\n        news: tempNewsArray\n      })\n      }\n    )\n  }\n\n  render() {\n    return  (\n      <div>\n        {/* The header for the webPage */}\n        <div className = {style.header}>\n          <div>\n            {/* Form that allows user to fetch a stock */}\n            <form className = {style.searchStockBackground} onSubmit = {this.handleSubmit}>\n              <input \n                placeholder = \"Type in a ticker e.g. IBM\" \n                type = \"text\" \n                className = {style.stockSearch} \n                value = {this.state.value} \n                onChange = {this.handleChange}>\n              </input>\n\n              <IconButton \n                className = {style.magnifying_glass} \n                type = 'submit' \n                value = \"Submit\"><FaSearch />\n              </IconButton> \n            </form>\n          </div>\n        </div>\n  \n        <div className = {style.newsArticleWrapper}>\n          {this.state.news.map(this.newsCreator)}\n        </div>\n    </div>\n    );\n\n  }\n  \n}\n\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":28,"column":9,"nodeType":"14","endLine":28,"endColumn":66},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]